{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter","trimmer"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"index.html","title":"MEV Auction","text":"<p>Multi-unit auctions, unlike their single-unit counterparts, present complex allocation mechanisms. The MEV Auction platform implements several innovative strategies:</p> <ol> <li>An enhanced uniform price auction, </li> <li>A Bifurcated Block Structure (splitting the block into halves),</li> <li>Elastic Supply Scheduling, </li> <li>Contract based bidding. </li> </ol>"},{"location":"index.html#block-structure","title":"Block Structure","text":"<p>We divide a block in two parts:</p> <p>One part, called</p> <ul> <li> <p>Referred to as <code>above</code> - represents the top part of the blockspace. Economically, this is   where competitive searchers want to place their transactions (e.g. for arbitrages etc.).</p> </li> <li> <p>Referred to as <code>below</code> - represents the rest of the blockspace. Economically, this is where   low-priority transactions - direct transfers, low volume swaps, some kind of intents, etc. - would   go. The rationale for this is simple: <code>above</code> and below represent two very different markets: The   first serves strategic actors, whereas the second serves 'everyone else' - people not interested   in speculation that just want to transact, e.g., to pay for stuff.</p> </li> </ul> <p><code>above</code> is a very time sensitive kind of blockspace, as mev-rich txs often come in last minute.</p> <p>On the other hand, below is not very time sensitive, and designing a futures market for it is easier.</p> <pre><code>gantt\n    title Future auction for `below`\n    dateFormat YY-MM\n    axisFormat %m\n    tickInterval 1month\n    section Epoch i\n        We know slots for Epoch i+2 are 03,08 and 11 : crit, done, milestone, 00-01, 1m\n        Auction for `below`, slots 03,08,11 : 00-01, 6M\n        Futures awarded : milestone, 00-07, 1m\n        Users can transact: active, 00-07, 6M\n    section Epoch i+1\n        Users can transact: active, 01-01, 12M\n    section Epoch i+2\n        Slot 03, future can be used : crit, active, milestone, 02-03, 1\n        Slot 08, future can be used : crit, active, milestone, 02-08, 1\n        Slot 11, future can be used : crit, active, milestone, 02-11, 1</code></pre> <p>The idea is this: Since we run our own validators, we will know 2 epochs in advance in which slots we will mint a block. So, we can sell that blockspace about 2 epochs in advance, providing a futures market for below. The following diagram shows an example of how this would work. Crucially, we want users to be able to transact, that is, to be able to resell the futures on a secondary market.</p>"},{"location":"index.html#introducing-elastic-supply-schedule-and-novel-tie-breaking","title":"Introducing Elastic Supply Schedule and Novel Tie-Breaking","text":"<p>In the realm of auctions, the traditional uniform price format has been a mainstay. However, we're on the cusp of an exciting evolution, introducing two groundbreaking features that promise to transform the auction landscape:</p> <p>Elastic Supply Schedule: Breaking away from the rigidness of a fixed supply, we're introducing elasticity. When prices dip low, we'll strategically limit the availability of options. This dynamic approach ensures a balance between supply and demand, maintaining value and interest.</p> <p>Revamped Tie-Breaking Rule: In the world of auctions, ties are inevitable. But our approach is different. We're moving away from the conventional method that prioritizes higher marginal bids. Instead, we're implementing a novel rule that intensifies competition, particularly for those crucial marginal quantities.</p>"},{"location":"index.html#why-these-changes-matter","title":"Why These Changes Matter","text":""},{"location":"index.html#shortcomings-of-the-standard-uniform-price-auction","title":"Shortcomings of the standard uniform price auction","text":"<p>Traditionally, with a fixed supply, there's a looming risk of plummeting prices. This phenomenon, identified by Wilson in 1979, highlights a bidder's tendency to underbid. In multi-unit auctions, this is a critical challenge. In a uniform price auction, underbidding on the marginal unit doesn't just lower the price for that unit; it slashes the overall price you pay.</p> <p>The real danger of severe under-pricing hinges on demand factors, which are often unpredictable and not easily deduced from existing data. The debate over whether discriminatory or uniform price auctions yield higher revenue remains unresolved, both theoretically (as discussed by Ausubel et al.  2011) and empirically.</p>"},{"location":"index.html#tie-breaking-rule","title":"Tie Breaking Rule","text":"<p>The traditional tie-breaking rule, which prioritizes higher marginal bids, is inherently flawed. It doesn't account for the strategic value of the marginal unit. This is particularly problematic in multi-unit auctions, where the marginal unit is often the most valuable. The current rule fails to capture the true value of the marginal unit, leading to suboptimal outcomes. This is due to the discrete nature of bids, it can happen that there is market-clearing price (where demand=supply). The typical rule applied in many auctions favors high marginal bids first. We will consider an alternative that introduces more pressure at the quantity at the margin.</p>"},{"location":"index.html#elastic-supply-curve-details","title":"Elastic Supply Curve Details","text":"<p>Maximum capacity is fixed, but the supply curve </p> \\[ S:P\u2192Q \\] <p>varies with price, offering different quantities of options. The supply function is designed to be initially concave, then constant at maximum capacity. This approach, theoretically supported by Licalzi (2005), aims to mitigate dramatic underpricing.</p>"},{"location":"Developers/index.html","title":"Platform Overview","text":"<p>MEV Searchers</p> <p>MEV searchers can also use SecureRPC for bundle / transaction submission. The endpoint above supports the following MEV methods:</p> <ul> <li><code>eth_sendRawTransaction</code></li> <li><code>manifold_sendBundle</code></li> <li><code>eth_sendBundle</code></li> <li><code>manifold_sendPrivateRawTransaction</code></li> </ul>","tags":["Overview","Getting Started"]},{"location":"Developers/index.html#block-structure","title":"Block Structure","text":"<p>we divide a block in two parts:</p> <p>One part, called</p> <ul> <li>also referred to as <code>above</code> - represents the top part of the blockspace. Economically, this is   where competitive searchers want to place their transactions (e.g. for arbitrages etc.) The other   part, called</li> <li>also referred to as <code>below</code> - represents the rest of the blockspace. Economically, this is where   low-priority transactions - direct transfers, low volume swaps, some kind of intents, etc. - would   go. The rationale for this is simple: <code>above</code> and below represent two very different markets: The   first serves strategic actors, whereas the second serves 'everyone else' - people not interested   in speculation that just want to transact, e.g., to pay for stuff.</li> </ul> <p><code>above</code> is a very time sensitive kind of blockspace, as mev-rich txs often come in last minute.</p> <p>On the other hand, below is not very time sensitive, and designing a futures market for it is easier.</p> <pre><code>gantt\n    title Future auction for `below`\n    dateFormat YY-MM\n    axisFormat %m\n    tickInterval 1month\n    section Epoch i\n        We know slots for Epoch i+2 are 03,08 and 11 : crit, done, milestone, 00-01, 1m\n        Auction for `below`, slots 03,08,11 : 00-01, 6M\n        Futures awarded : milestone, 00-07, 1m\n        Users can transact: active, 00-07, 6M\n    section Epoch i+1\n        Users can transact: active, 01-01, 12M\n    section Epoch i+2\n        Slot 03, future can be used : crit, active, milestone, 02-03, 1\n        Slot 08, future can be used : crit, active, milestone, 02-08, 1\n        Slot 11, future can be used : crit, active, milestone, 02-11, 1</code></pre> <p>Reflection</p> <p>The idea is this: Since we run our own validators, we will know 2 epochs in advance in which slots   we will mint a block. So, we can sell that blockspace about 2 epochs in advance, providing a futures   market for below. The following diagram shows an example of how this would work. Crucially, we want   users to be able to transact, that is, to be able to resell the futures on a secondary market.</p>","tags":["Overview","Getting Started"]},{"location":"Developers/index.html#current-mev-boost-auction","title":"Current MEV Boost Auction","text":"Note <p>A representation of transaction and block propagation with Proposer Builder Separation.</p> <p>(1) Searchers receive transactions from the P2P layer and generate transaction bundles using their specific MEV extraction knowledge. </p> <p>(2) These bundles are then sent to one or more builders.</p> <p>(3) Builders, who also receive transactions from the P2P layer, bundle blocks considering the transactions and bundles from searchers, guided by their local profit maximization algorithm. </p> <p>(4) Builders connect with relays and send new maximum profit blocks to these relays as they\u2019re discovered. </p> <p>(5) Upon request, relays share the status of the maximum profit bid with the next block proposer. </p> <p>(6) The block proposer, who receives transactions from the P2P layer as well, decides which block to mine based on the relay information and their own interests. </p> <p>(7) If the block proposer chooses the block from the relay, they return the signed block header, prompting the relay to share the actual block. </p>","tags":["Overview","Getting Started"]},{"location":"Developers/auctioneer.html","title":"Auctioneer Contract","text":"<p>The Auctioneer Contract is a Solidity smart contract that implements an auction mechanism for selling block space. This contract allows bidders to participate in auctions, submit manual bids, and settle the auctions. It supports multiple bidders, each with a unique ID.</p>"},{"location":"Developers/auctioneer.html#key-features","title":"Key Features","text":"<ul> <li>Bidders: Add and remove bidders dynamically.</li> <li>Auctions: Open and run auctions for selling block space.</li> <li>Manual Bids: Bidders can submit manual bids with specific quantities and prices.</li> <li>Settlement: After the auction, settle with successful bidders, transferring owed amounts.</li> </ul> <p>It allows adding and removing bidders and operators. Bidders can place bids on auction slots. Operators can run the auctions.</p> <p>The Auctioneer contract keeps track of:</p> <p>A mapping of addresses to operator status A mapping of addresses to bidder IDs A mapping of bidder IDs to addresses A mapping of auction slots to Auction structs Internal mappings to store bid counts and actual bid values per auction</p> <p>The Auction struct stores:</p> <p>The number of items for sale If the auction is open and settled Mappings of bidders to their BidderInfo</p> <p>The BidderInfo struct stores:</p> <p>The number of items a bidder bought The amount a bidder owes</p> <p>It has functions like:</p> <p>newBidder - Registers a new bidder address and assigns them an ID removeBidder - Deletes a bidder by ID addOperator - Grants operator status to an address removeOperator - Revokes operator status from an address</p> <p>The contract uses modifiers like onlyOwner and onlyOperator to restrict access.</p> <p>The key data transformations are:</p> <p>Mapping addresses to bidder IDs Tracking auction state per slot Storing bids received per auction Tracking items bought and owed per bidder This allows running decentralized auctions where bidders can securely place bids, operators can manage the auctions, and auction state is persisted on-chain.</p>"},{"location":"Developers/auctioneer.html#contract-structure","title":"Contract Structure","text":"<ul> <li>The contract is based on the ERC6909 standard.</li> <li>It uses the SafeTransferLib for safe WETH (Wrapped Ether) transfers.</li> <li>Bidders can participate through the <code>getBid</code> function.</li> <li>Manual bids are supported via the <code>bid</code> function.</li> </ul>"},{"location":"Developers/auctioneer.html#events","title":"Events","text":"<ul> <li><code>BidderAdded</code> and <code>BidderRemoved</code> for dynamic management of bidders.</li> <li><code>AuctionOpened</code> signals the start of a new auction.</li> <li><code>ManualBidSubmitted</code> is emitted when a bidder submits a manual bid.</li> <li><code>AuctionSettled</code> indicates the successful settlement of an auction.</li> </ul>"},{"location":"Developers/auctioneer.html#errors","title":"Errors","text":"<ul> <li>Various error messages to handle exceptional cases, such as invalid bids or insufficient funds.</li> </ul>"},{"location":"Developers/auctioneer.html#functions","title":"Functions","text":"<ul> <li>newBidder: Add a new bidder to the auction.</li> <li>removeBidder: Remove a bidder from the auction.</li> <li>openAuction: Open a new auction for a specific slot.</li> <li>bid: Submit a bid for a specific auction slot.</li> <li>run: Execute the auction for a specific slot, considering manual and contract bids.</li> <li>settle: Settle the auction by transferring owed amounts to successful bidders.</li> <li>getBidderInfo: Retrieve information about a bidder after auction settlement.</li> <li>packBid: Pack bid details into a uint256 for submission.</li> <li>decodeBid: Decode packed bid information for analysis.</li> <li>checkBid: Check the validity of a bid before execution.</li> </ul>"},{"location":"Developers/auctioneer.html#state-variables","title":"State Variables","text":""},{"location":"Developers/auctioneer.html#maxbidder","title":"maxBidder","text":"<pre><code>uint8 public maxBidder;\n</code></pre>"},{"location":"Developers/auctioneer.html#weth9","title":"WETH9","text":"<pre><code>WETH public WETH9;\n</code></pre>"},{"location":"Developers/auctioneer.html#idmap","title":"IdMap","text":"<pre><code>mapping(address =&gt; uint8) public IdMap;\n</code></pre>"},{"location":"Developers/auctioneer.html#biddermap","title":"bidderMap","text":"<pre><code>mapping(uint8 =&gt; address) public bidderMap;\n</code></pre>"},{"location":"Developers/auctioneer.html#auctions","title":"auctions","text":"<pre><code>mapping(uint256 =&gt; Auction) public auctions;\n</code></pre>"},{"location":"Developers/auctioneer.html#bidcount","title":"bidCount","text":"<pre><code>mapping(uint256 =&gt; uint256) internal bidCount;\n</code></pre>"},{"location":"Developers/auctioneer.html#bids","title":"bids","text":"<pre><code>mapping(uint256 =&gt; mapping(uint256 =&gt; uint256)) internal bids;\n</code></pre>"},{"location":"Developers/auctioneer.html#functions_1","title":"Functions","text":""},{"location":"Developers/auctioneer.html#constructor","title":"constructor","text":"<pre><code>constructor(WETH _weth) Owned(msg.sender);\n</code></pre>"},{"location":"Developers/auctioneer.html#onlyauctionopen","title":"onlyAuctionOpen","text":"<pre><code>modifier onlyAuctionOpen(uint256 slot);\n</code></pre>"},{"location":"Developers/auctioneer.html#newbidder","title":"newBidder","text":"<p>Add a new bidder to the auction.</p> <pre><code>function newBidder(address additionalBidder) external onlyOwner returns (uint8 newId);\n</code></pre> <p>Parameters</p> Name Type Description <code>additionalBidder</code> <code>address</code> The address of the additional bidder."},{"location":"Developers/auctioneer.html#removebidder","title":"removeBidder","text":"<p>Remove a bidder from the auction.</p> <pre><code>function removeBidder(uint8 bidderId) external onlyOwner;\n</code></pre> <p>Parameters</p> Name Type Description <code>bidderId</code> <code>uint8</code> The index of the bidder to be removed."},{"location":"Developers/auctioneer.html#openauction","title":"openAuction","text":"<p>Open a new auction for a specific slot.</p> <pre><code>function openAuction(uint256 slot, uint120 itemsForSale) external onlyOwner;\n</code></pre> <p>Parameters</p> Name Type Description <code>slot</code> <code>uint256</code> The auction slot. <code>itemsForSale</code> <code>uint120</code> The number of items available for sale in the auction."},{"location":"Developers/auctioneer.html#bid","title":"bid","text":"<p>Bid function for bidders to submit manual bids.</p> <pre><code>function bid(uint256 slot, uint256[] memory packedBids) external;\n</code></pre> <p>Parameters</p> Name Type Description <code>slot</code> <code>uint256</code> The auction slot. <code>packedBids</code> <code>uint256[]</code> Array of packed bids"},{"location":"Developers/auctioneer.html#run","title":"run","text":"<p>Execute the auction for a specific slot.</p> <pre><code>function run(uint256 slot) external onlyAuctionOpen(slot) onlyOwner;\n</code></pre> <p>Parameters</p> Name Type Description <code>slot</code> <code>uint256</code> The auction slot."},{"location":"Developers/auctioneer.html#settle","title":"settle","text":"<p>Settle the auction for a specific slot.</p> <pre><code>function settle(uint256 slot) external onlyOwner;\n</code></pre> <p>Parameters</p> Name Type Description <code>slot</code> <code>uint256</code> The auction slot."},{"location":"Developers/auctioneer.html#getbidderinfo","title":"getBidderInfo","text":"<p>Retrieve information about a bidder after auction settlement.</p> <pre><code>function getBidderInfo(uint256 slot, address bidder) external view returns (uint120 itemsBought, uint128 amountOwed);\n</code></pre> <p>Parameters</p> Name Type Description <code>slot</code> <code>uint256</code> The slot identifier of the auction. <code>bidder</code> <code>address</code> The address of the bidder for whom information is requested. <p>Returns</p> Name Type Description <code>itemsBought</code> <code>uint120</code> The number of items bought by the bidder in the specified auction. <code>amountOwed</code> <code>uint128</code> The amount owed by the bidder for the items bought in the specified auction. Requirements: - The auction must have been settled. - The provided <code>bidder</code> address must be valid and have participated in the auction."},{"location":"Developers/auctioneer.html#packbid","title":"packBid","text":"<p>Packed Bid details into a uint256 for submission.</p> <pre><code>function packBid(uint256 bidPrice, uint256 itemsToBuy, uint256 bidderId) external pure returns (uint256 packedBid);\n</code></pre> <p>Parameters</p> Name Type Description <code>bidPrice</code> <code>uint256</code> Price per item. <code>itemsToBuy</code> <code>uint256</code> Items to buy in the auction. <code>bidderId</code> <code>uint256</code> Id for bidder <p>Returns</p> Name Type Description <code>packedBid</code> <code>uint256</code> for auction submission"},{"location":"Developers/auctioneer.html#decodebid","title":"decodeBid","text":"<p>Decode the packed bid information.</p> <pre><code>function decodeBid(uint256 packedBid) internal pure returns (uint8 bidderId, uint120 itemsToBuy, uint128 bidPrice);\n</code></pre> <p>Parameters</p> Name Type Description <code>packedBid</code> <code>uint256</code> The packed bid information. <p>Returns</p> Name Type Description <code>bidderId</code> <code>uint8</code> The bidder's ID. <code>itemsToBuy</code> <code>uint120</code> The number of items the bidder wants to buy. <code>bidPrice</code> <code>uint128</code> The price per item in the bid."},{"location":"Developers/auctioneer.html#checkandstorebid","title":"checkAndStoreBid","text":"<p>Check the validity of a bid.</p> <pre><code>function checkAndStoreBid(address bidder, uint256 slot, uint256 itemsForSale, uint256[] memory packedBids) internal;\n</code></pre> <p>Parameters</p> Name Type Description <code>bidder</code> <code>address</code> Address of bidder. <code>slot</code> <code>uint256</code> The auction slot. <code>itemsForSale</code> <code>uint256</code> Total items for sale for the slot. <code>packedBids</code> <code>uint256[]</code> Array of packed bids Requirements: - The number of items in the bid must not exceed the available items for sale in the auction. - The bidder must have enough funds to cover the bid amount."},{"location":"Developers/auctioneer.html#iscontract","title":"isContract","text":"<p>checks codesize for contract existence</p> <pre><code>function isContract(address _addr) internal view returns (bool _isContract);\n</code></pre> <p>Parameters</p> Name Type Description <code>_addr</code> <code>address</code> address of contract to check"},{"location":"Developers/auctioneer.html#events_1","title":"Events","text":""},{"location":"Developers/auctioneer.html#auctionsettled","title":"AuctionSettled","text":"<pre><code>event AuctionSettled(uint256 indexed slot);\n</code></pre>"},{"location":"Developers/auctioneer.html#bidderadded","title":"BidderAdded","text":"<pre><code>event BidderAdded(address indexed bidder, uint8 bidderId);\n</code></pre>"},{"location":"Developers/auctioneer.html#bidderremoved","title":"BidderRemoved","text":"<pre><code>event BidderRemoved(address indexed bidder, uint8 bidderId);\n</code></pre>"},{"location":"Developers/auctioneer.html#auctionopened","title":"AuctionOpened","text":"<pre><code>event AuctionOpened(uint256 indexed slot, uint120 itemsForSale);\n</code></pre>"},{"location":"Developers/auctioneer.html#errors_1","title":"Errors","text":""},{"location":"Developers/auctioneer.html#invalidid","title":"InvalidId","text":"<pre><code>error InvalidId();\n</code></pre>"},{"location":"Developers/auctioneer.html#invalidbiditems","title":"InvalidBidItems","text":"<pre><code>error InvalidBidItems();\n</code></pre>"},{"location":"Developers/auctioneer.html#insufficientfunds","title":"InsufficientFunds","text":"<pre><code>error InsufficientFunds();\n</code></pre>"},{"location":"Developers/auctioneer.html#auctionnotopen","title":"AuctionNotOpen","text":"<pre><code>error AuctionNotOpen(uint256 slot);\n</code></pre>"},{"location":"Developers/auctioneer.html#auctionnotclosed","title":"AuctionNotClosed","text":"<pre><code>error AuctionNotClosed(uint256 slot);\n</code></pre>"},{"location":"Developers/auctioneer.html#auctionalreadyopen","title":"AuctionAlreadyOpen","text":"<pre><code>error AuctionAlreadyOpen(uint256 slot);\n</code></pre>"},{"location":"Developers/auctioneer.html#auctionalreadysettled","title":"AuctionAlreadySettled","text":"<pre><code>error AuctionAlreadySettled(uint256 slot);\n</code></pre>"},{"location":"Developers/auctioneer.html#biddernotregistered","title":"BidderNotRegistered","text":"<pre><code>error BidderNotRegistered(address bidder);\n</code></pre>"},{"location":"Developers/auctioneer.html#bidderalreadyexists","title":"BidderAlreadyExists","text":"<pre><code>error BidderAlreadyExists(address bidder);\n</code></pre>"},{"location":"Developers/auctioneer.html#structs","title":"Structs","text":""},{"location":"Developers/auctioneer.html#auction","title":"Auction","text":"<pre><code>struct Auction {\n    uint120 itemsForSale;\n    bool isOpen;\n    bool isSettled;\n    mapping(address =&gt; BidderInfo) biddersInfo;\n}\n</code></pre>"},{"location":"Developers/auctioneer.html#bidderinfo","title":"BidderInfo","text":"<pre><code>struct BidderInfo {\n    uint120 itemsBought;\n    uint128 amountOwed;\n}\n</code></pre>"},{"location":"Developers/sdk.html","title":"Auction SDK","text":"<p>The Auction Core SDK provides abstractions for other SDKs to use in:</p> <ul> <li>Typescript/Javascript</li> <li>Rust</li> <li>Python</li> </ul> <p>This SDK is not expected to be used in isolation, but only as part of other SDKs.</p>"},{"location":"Developers/testnet.html","title":"MEV L2 Testnet","text":""},{"location":"Developers/testnet.html#node-operators","title":"Node Operators","text":"<p>Please coordinate with us to register your validator set with our registry service. We will provide you with the necessary information to get started.</p>"},{"location":"Developers/testnet.html#validators","title":"Validators","text":"<p>Connecting to the relay without being registered will result in your validator operating correctly so long as MEV Boost is also running.</p>"},{"location":"Developers/testnet.html#holesky-information","title":"Holesky Information","text":""},{"location":"Developers/testnet.html#builders-and-searchers","title":"Builders and searchers","text":"<p>Aquire some Holesky Testnet ETH through a faucet in the resources listed below. If you are unable to secure enough, please reach out to us.</p>"},{"location":"Developers/testnet.html#contracts","title":"Contracts","text":"<p>L2 Auctioneer: <code>0x277058D78307F11e590D91eDfF3D4b1C0fAA240c</code> L2 SettlementHouse: <code>0xD26004b2DB8e2e17e074EedE115bF200cb5D10d9</code> L1StandardBridgeProxy: <code>0x3Ae5Ca0B05bE12d4FF9983Ed70D86de9C34e820C</code>,</p> <p>To monetize yourself on L2, send some ETH on L1 (Holesky) to <code>0x3Ae5Ca0B05bE12d4FF9983Ed70D86de9C34e820C</code></p> <ul> <li>Holesky Network ID: <code>17000</code></li> <li>Holesky Chain ID: <code>17000</code></li> <li>L2 Chain ID: <code>42169</code></li> <li>L2 RPC Endpoint: @holesky-l2.v2-stag.manifoldx.com</li> </ul> <p>Warning</p> <p>The L2 RPC Endpoint requires a username and password, this is provided by us during the closed testing period</p>"},{"location":"Developers/testnet.html#resources","title":"Resources","text":"<ul> <li>Block Explorers</li> <li>holesky.etherscan.io</li> <li>holesky.beaconcha.in</li> <li>dora-holesky.pk910.de</li> <li>Ethstats: ethstats.holesky.ethpandaops.io</li> <li>Faucets:</li> <li>holesky-faucet.pk910.de</li> <li>QuickNode Faucet</li> <li>Chainstack Faucet</li> <li>Automata Holesky Faucet</li> </ul>"},{"location":"Learning/aup_auction.html","title":"Augmented Uniform Price Auction","text":"","tags":["primary market","price auction","auction format","gas auction","mechanism design"]},{"location":"Learning/aup_auction.html#specification-for-primary-market","title":"Specification for Primary Market","text":"<p>We are augmenting the standard uniform price auction format with two features:</p> <ol> <li> <p>Instead of providing a perfectly inelastic supply (also known as a fixed amount that we auction     off), we offer an elastic supply schedule: If the price is very low, we will offer only limited     amounts of options.</p> </li> <li> <p>We introduce a different tie-breaking rule for excess demand. Owing to the discrete nature of     bids, situations can arise where no market-clearing price exists (where demand equals supply).     While the typical rule in many auctions prioritizes high marginal bids first, we propose an     alternative that exerts more pressure at the marginal quantity level.</p> </li> </ol> <p>We explain the rationale behind these two features below.</p> <p>Before we delve into the details, let us address the issue with the standard uniform price auction. When the supply is fixed, or perfectly inelastic, there is a risk of resulting in very low prices. This concept, well understood since the work of Wilson (1979), highlights that bidders are incentivized to understate their bids, a common challenge in most multi-unit auctions. In the uniform price auction, the tradeoff is evident: if you lower your bid for the marginal unit, not only do you reduce your price for that unit, but if you win, you also decrease the overall price you pay.</p> <p>Now, the overall effect and danger of severe under-pricing is contingent on demand factors. It cannot be easily inferred from data. It is also well understood that there is no clear way to tell whether the discriminatory or uniform price auction provides more revenue, neither theoretically (Ausubel et al. 2011) nor empirically.</p>","tags":["primary market","price auction","auction format","gas auction","mechanism design"]},{"location":"Learning/aup_auction.html#elastic-supply-curve","title":"Elastic supply curve","text":"<ul> <li> <p>Fix the max capacity of beta, \\(q^{max}\\). We assume this is given for the auction. Obviously, it   can be a parameter that we will optimize over time.</p> </li> <li> <p>The supply curve, \\(S \\colon P \\to Q\\), where \\(P\\) is the set of allowed prices; and \\(Q\\) the set of   available options. It gives for each price the amount of gas space we offer.</p> </li> <li> <p>The set of options will be determined by the tick size we provide. \\(Q\\) will be further limited by   the max capacity we offer. That is, typically, \\(Q=\\{0,t_q,2t_q,..,q^{max}\\}\\) where \\(t_q\\) is the   tick size of one option and it should hold</p> </li> </ul> \\[  t_q=q^{max}/k \\] <p>for some \\(k \\in N\\).</p> <ul> <li> <p>The idea for the shape of the supply function is to have an initial segment of the supply curve   which is concave and a second segment that then only provides a constant amount. This is the   maximally available capacity. Below are pictures, that will make this clearer.</p> </li> <li> <p>Concretely, one parameterized functional form is this:</p> </li> </ul> \\[ S(p) = \\begin{cases} s(p)  &amp; \\text{for } p &lt; p' \\\\ s(p') &amp; \\text{for } p &gt;= p' \\end{cases} \\] <p>where $ s(p) $</p> \\[ s(p) = ap^n \\] <p>where \\(a,n\\) are constants. The idea, again, is that the function is concave and thereby monotonically increasing until price \\(p'\\).</p> <p>This price is calculated by setting the max quantity, \\(q^{max} = ap^n\\), and then deriving</p> \\[  p' \\equiv (q^{max} / a)^{1/n} \\] <p>NOTE: It goes without saying that the functional form above is up for change if we want to.</p> <p>NOTE: It is theoretically well understood that an elastic supply curve can reduce the danger of dramatically underpricing. In practice, this is not so often used. One reason can be that the value of the good might be lower for the auctioneer.</p> <p>In our case, however, this can be different. The reason is that we possibly have use for the space ourselves. So, as remarked above, we might have a positive outside value and might not be willing to sell for any price.</p>","tags":["primary market","price auction","auction format","gas auction","mechanism design"]},{"location":"Learning/aup_auction.html#bidders","title":"Bidders","text":"<p>Each bidder can submit several (quantity,price) pairs. We thereby elicit his (partial) demand function \\(d_i(p) \\colon P \\to Q\\).</p>","tags":["primary market","price auction","auction format","gas auction","mechanism design"]},{"location":"Learning/aup_auction.html#aggregation-of-demand","title":"Aggregation of demand","text":"<p>The way that a uniform auction proceeds is by aggregating demand and matching it to supply. This allows to determine a market clearing price - if it exists. Reasons for non-existence can be increasing demand curves.</p> <p>Now, first, consider the aggregate demand:</p> \\[ D(p) \\equiv \\sum_j d_j(p) \\] <p>Fix the highest price at which the all the demand can be satisfied (if it exists). That is,</p> \\[ p^{*}=max\\{p|D(p)=S(p)\\} \\] <p>Note, in the case where there is excess demand for this price, i.e. \\(D(p^{*})&gt;S(p^{*})\\), we need an allocation rule that determines who gets what.</p> <p>Note, if demand schedules \\(d_j(p)\\) were continuous, then excess demand would not be feasible.</p> <p>Lastly note, that the fact that actual bids are discontinuous might reduce the likelihood of a low price outcome (Kastl 2011).</p>","tags":["primary market","price auction","auction format","gas auction","mechanism design"]},{"location":"Learning/aup_auction.html#allocation-rule","title":"Allocation rule","text":"<p>In case of excess demand, how is the excess demand cleared?</p> <p>The standard rule is higher price, higher priority:</p> \\[ q_j = d_{j,\\&gt;}(p^{*}) + \\frac{d_{j}(p^{ *})- d_{j,&gt;}(p^{*})}{D_{j}(p^{ *})- D_{j,&gt;}(p^{*})} \\] <p>where \\(d_{j,\\&gt;}(p^{*})\\) is the individual demand of \\(j\\) for higher prices than \\(p^{*}\\) and \\(D_{j,&gt;}(p^{*}\\) is the aggregate demand at prices higher than \\(p^{*}\\).</p> <p>So, an agent first gets his demand that he stated at higher prices. Then he will receive a relative share of the remaining excess demand at the market clearing price.</p> <p>There is an alternative allocation rule though:</p> <p>Give a share relative to individual demand at that point. That is,</p> \\[ q_i = d_i(p^{**})/D(p^{**}) \\] <p>Which means the larger the demand relative to overall demand at that price, the larger the share that a player will get. In contrast to the rule above, only the marginal demand matters; demand stated at higher demand levels are irrelevant.</p> <p>Reflection</p> <p>This creates stronger incentives to bid closer to true valuations; it reduces the tendency to end up</p> <p>in a low price equilibrium. </p>","tags":["primary market","price auction","auction format","gas auction","mechanism design"]},{"location":"Learning/primary-market.html","title":"Primary Market","text":"","tags":["primary market","gas auction","mechanism design"]},{"location":"Learning/primary-market.html#primary-market","title":"Primary market","text":"","tags":["primary market","gas auction","mechanism design"]},{"location":"Learning/primary-market.html#nature-of-options-to-be-sold","title":"Nature of options to be sold","text":"<p>The options refer to slices of the overall gas size of beta. We aim to homogenize it, i.e. all slices of gas are equal and interchangeable.</p> <p>The nature of the futures we are selling under the beta market depends on the capacity restriction we impose. Most importantly, do we guarantee enough capacity that the calls get included or not? The problem with guaranteeing a fixed capacity for beta is that this means restricting the capacity for alpha. The problem with this is that alpha might be more lucrative for us. In particular, we know that lottery blocks come along that make up a large chunk of the overall remuneration we can achieve at all.</p> <p>Reflection</p> <p>If we fix alpha, we might be missing a significant amount of value. The tradeoff can be seen in the picture below.</p> <p></p> <p>We make the assumption that top of the block gas space is more valuable. The main assumption is that at some point, the marginal value for a builder owning the whole block (green) goes below the marginal value of a beta buyer (typically someone who wants to be just included independently of the order).</p> <p>If we had perfect information, we could fix the capacity constraint at exactly the intersection point. But this information is not available. We can only approximate it. The question of lottery blocks can also be seen in the diagram, the question is whether for such a block both curves are shifted in the same way. If not, it would indicate the need to give alpha builders more space relative to beta builders. There is another aspect to consider. The larger the alpha part, the larger the possibility of including a txs in beta that will revert (due to state changes). This will degrade the value of the option to buy beta space. What is more, this might jeopardize the service as a whole. If builders get the impression that the service is not of sufficient quality, then they will stop using it. So there is also a reputation component - in particular at the beginning.</p>","tags":["primary market","gas auction","mechanism design"]},{"location":"Learning/primary-market.html#bidder-characteristics","title":"Bidder characteristics","text":"<p>Reflection</p> <p>We operate under the assumption that position does not matter; if it does might affect the design significantly.</p> <p>Bidders are possibly risk-averse. Standard revenue equivalence might go out of the window. Bidders are asymmetric; in particular if there is private orderflow.</p> <p>Bidders valuations are not clear: - If they draw from a public mempool or if there are global conditions affecting value of block space, their valuations will be interdependent. - There is also the danger of a further coordination issue; this might favor a winner-takes-all solution</p>","tags":["primary market","gas auction","mechanism design"]},{"location":"Learning/primary-market.html#relation-to-the-secondary-market","title":"Relation to the secondary market","text":"<p>Traditionally we would assume that a well-designed auction does not require a secondary market. If the result of the auction is in the core, no change in the allocation makes sense. This is different here as information comes in overtime. - Base fee - Transactions updates for alpha bidders We operate under the assumption that position does not matter; if it does might affect the design significantly.</p> <p>New bidders are active on the secondary market. The secondary market therefore is not just a reallocation of the primary auction but includes information updates.</p> <p>Reflection</p> <p>This is in contrast to most work on auctions with resale (re: secondary) markets. The secondary market changes the rationale for bidding in the primary auction</p>","tags":["primary market","gas auction","mechanism design"]},{"location":"Learning/rulebook.html","title":"Rulebook","text":"<p>The Call Market meets the criteria for exemption under the CEA.</p> <p>Commodity Exchange Act (CEA), 7 U.S.C. \u00a7 1 et seq. CFTC Regulations, 17 CFR Parts 1 to 190. CFTC Advisory on Forward Contracts, which provides guidance on the exemption criteria for forward contracts.</p>"},{"location":"Learning/rulebook.html#permissiond-market-access","title":"Permissiond Market Access","text":"<p>The market will be regulated by the Commodity Exchange Act (CEA) and will be subject to the oversight of the Commodity Futures Trading Commission (CFTC).</p>"},{"location":"Learning/secondary-market.html","title":"Secondary Market","text":"","tags":["secondary market","gas auction","mechanism design"]},{"location":"Learning/secondary-market.html#secondary-market","title":"Secondary Market","text":"<p>The structure the secondary market so that a concentrated selling back is feasible</p> <p>The main purpose of this market is to account for information differences over time - builders might realize they cannot fill a block; or they might need more space The base fee is not known at the time of the primary market; so there should be updates regarding the base fee happening with before-strike-time blocks being minted. This also affects the initial pricing we offer.</p> <p>Allocation subject to change</p> <p>It is unclear what allocation we will have from the primary market, as a winner-takes all is possible</p>","tags":["secondary market","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html","title":"Types of Auctions","text":"","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#auction-platform","title":"Auction Platform","text":"<p>Note that clearing and settlement is separate from the auction platform.</p>","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#venues","title":"Venues","text":"","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#gas-venues","title":"Gas Venues","text":"<ul> <li>Primary Market</li> <li>Secondary Market</li> <li>Inclusion Market</li> </ul>","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#data-blob-venues","title":"Data (Blob) Venues","text":"<ul> <li>Blob Market</li> </ul>","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#auction-formats","title":"Auction Formats","text":"","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#static-sealed-bid-auction-formats","title":"Static Sealed Bid Auction Formats","text":"<p>Focusing on the nuances of static sealed bid auctions, this section examines the subtleties and operational dynamics of different auction formats. It critically evaluates the strengths and potential pitfalls of each model, providing a well-rounded view essential for informed decision-making.</p> <p>TODO: Content Structure Overview and Comparative Analysis Assessment of Uniform vs. Discriminatory Price Auctions Key Factors Influencing Auction Format Selection</p>","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#augmented-uniform-price-auction","title":"Augmented Uniform Price Auction","text":"<ul> <li>Innovative Features to Counter Underpricing</li> <li>Elastic Supply Curve Concept and its Impact</li> <li>Unique Allocation Rules for Demand Excess</li> <li>Discriminatory Price Auction Mechanics</li> </ul> <p>Operational Framework and Bidder Dynamics Clearing Price Determination and Allocation Rules</p>","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Learning/types_of_auctions.html#concluding-remarks","title":"Concluding Remarks","text":"<p>Future Directions and Experimental Considerations Need for Extensive Simulation and Expert Analysis Iterative Design Approach and Preliminary Nature</p>","tags":["primary market","secondary market","auction format","gas auction","mechanism design"]},{"location":"Reference/compare.html","title":"Compare","text":"Name **MEV Auction Platform ** Paradigm Merkle.io Kolibrio BloXroute MEV-Blocker MEV-Share Revenue 90% of MEV,guaranteed at least$0.02 per transaction 90% of MEV 90% of MEV $0 $0 Future Inclusion \u2714\ufe0e \u2715 MEV Boost Compatible \u2714\ufe0e \u2714\ufe0e New Trust Assumptions \u2714\ufe0e \u2714\ufe0e \u2714\ufe0e \u2714\ufe0e \u2714\ufe0e Exclude Reverting Transactions \u2714\ufe0e Multi Block Support \u2714\ufe0e Latency based \u2715 \u2714\ufe0e Requires RPC Connection \u2715 \u2714\ufe0e \u2714\ufe0e \u2714\ufe0e \u2714\ufe0e \u2714\ufe0e Requires Block Builder integration \u2715 \u2714\ufe0e Dashboard theta ox ox ox ox Compliant theta ox ox ox ox Programmable privacy Theta ox ox ox Theta Status API theta ox ox ox theta Advanced API Theta ox ox Dedicated RPC theta Theta theta Fast inclusion theta ox Theta Theta MEV Protection theta Theta Theta Theta theta Chains Ethereum Theta Theta Theta Theta Theta Polygon \u2715 theta Theta Theta ox ox Binance Smart Chain \u2715 ( ) Theta Theta ox ox Total"},{"location":"Reference/contract_design.html","title":"Auction and Market Designs","text":""},{"location":"Reference/contract_design.html#market-and-auction-design-and-structure","title":"Market and Auction Design and Structure","text":""},{"location":"Reference/contract_design.html#alpha","title":"Alpha","text":"<p>We will keep the alpha part as is for now. We do not want to impose a new format on bidders as given our small size might mean being ignored. The only change is the restriction of gas to 25MM. (The rest goes to the beta market).</p> <p>Tip</p> <p>This means that the auction is backwards compatible with MEV Boost</p>"},{"location":"Reference/contract_design.html#beta","title":"Beta","text":"<p>We will go with a discriminatory auction first.</p> <p>Warning</p> <p>It is understood though that we adapt the auction format depending on: (i) feedback by potential bidders (ii) actual behavior in the market.</p> <p>We will restrict the residual claim only to full bids for now. </p> <p>This is to avoid too small of token allocations that are then practically of no use.</p> <p>The main reasons are:</p> <ul> <li>Simple and familiar format</li> <li>In principle compatible with a secondary market</li> <li>But first and foremost: Want to get feedback from bidders how they bid.</li> </ul>"},{"location":"Reference/contract_design.html#contingencies","title":"Contingencies","text":"<ol> <li>Depending on the step bidding, we increase the token size.</li> <li>If we observe bidding on whole blocks only (or close to it), we can simplify the whole setup    dramatically.</li> <li>If we observe upward sloping demand curves, we might need to change the format completely.</li> </ol>"},{"location":"Reference/contract_design.html#secondary-market","title":"Secondary market","text":"<ul> <li>Market running after primary allocation took place</li> <li> <p>Need to think whether we should provide the marketplace ourselves</p> </li> <li> <p>In principle could be handled by external parties</p> </li> <li>But the interlocking of different markets (that the timing of spot market and secondary market is making sense) is probably relevant and easier to orchestrate by us.</li> <li> <p>The main purpose of this market is to account for information differences over time - e.g. builders might realize they cannot fill a block; or they might need more space.</p> </li> <li> <p>The base fee is not known at the time of the primary market;so there should be updates regarding the base fee happening with before-strike-time blocks being minted. This also affects the initial pricing we offer.</p> </li> </ul>"},{"location":"Reference/contract_summary.html","title":"Contract Protocol Summary","text":"<p>This section outlines the specification for a block proposer call market auction contract. It's an alternative to the MEV Boost Flashbots Auction and is a work in progress. The document includes:</p> <p>Contract Properties: Outlines the essential characteristics of the contract. Contract Functions: Describes the functions within the contract. Contract Events: Lists events that the contract can emit. Contract Storage: Details how data is stored in the contract. Contract Invariants: Explains the unchanging aspects of the contract. Contract Tests: Discusses testing procedures for the contract. Contract Properties Tests: Elaborates on testing the properties of the contract. This section serves as a technical blueprint, detailing the framework and functionality of the proposed auction contract.</p>"},{"location":"Reference/glossary.html","title":"Glossary","text":""},{"location":"Reference/glossary.html#documentation-overview","title":"Documentation Overview","text":"<p>The document is a thorough and technical exploration of auction design and implementation in the context of Ethereum, focusing on a block proposer call market auction. It provides a detailed specification for this auction type, a glossary of terms, accounting procedures, market design considerations, and an analysis of different auction formats. The document is structured into distinct sections, each covering a critical aspect of the auction system.</p>"},{"location":"Reference/glossary.html#validators","title":"Validators","text":"<p>\\(\\pi_{\\text {stake }}(0):\\) Initial asset distribution \\(R_t\\) : Staking block reward at block height \\(t\\) \\(S\\left(i, \\pi_{\\text {stake }}\\right):\\) Slash that validator \\(i\\) receives if the staking distribution is \\(\\pi_{\\text {stake }}\\)</p>"},{"location":"Reference/glossary.html#c-maximum-block-size","title":"C, Maximum Block Size","text":"<p>let C denote the maximum size of a block (C is for \u201ccapacity\u201d)</p>"},{"location":"Reference/glossary.html#gas-price","title":"Gas Price","text":"<p>A gas price is usually measured in Gwei and 1 Gwei =10\u22129 ETH.</p> <p>The correct measure is Wei =10-18 ETH.</p>"},{"location":"Reference/glossary.html#block-proposer-call-market-auction-specification","title":"Block Proposer Call Market Auction Specification","text":"<p>This section serves as a technical blueprint for the proposed auction contract, detailing its properties, functions, events, storage, invariants, and testing procedures.</p>"},{"location":"Reference/glossary.html#accounting","title":"Accounting","text":"<p>Discusses the financial aspects of the auction system, including various proposals for managing remunerations for validators and builders. It also introduces a bid adjustment feature for the auction system.</p>"},{"location":"Reference/glossary.html#discussion-market-designs","title":"Discussion Market Designs","text":"<p>This extensive section delves into the design considerations, updates, and trade-offs in the auction market. It covers the structure of both the primary and beta markets, along with the initial version of the MEV Protocol and auction accounting details.</p>"},{"location":"Reference/glossary.html#static-sealed-bid-auctions","title":"Static Sealed Bid Auctions","text":"<p>An analytical discussion on different auction formats, particularly focusing on uniform price and discriminatory price auctions. It proposes an augmented uniform price auction to mitigate underpricing and details the discriminatory price auction format.</p>"},{"location":"Reference/glossary.html#terms","title":"Terms","text":"* value description **** blockhash uint blockNumber returns (bytes32): hash of the given block when <code>blocknumber</code> is one of the 256 most recent blocks; otherwise returns zero <code>block.basefee</code> uint current block\u2019s base fee (EIP-3198 and EIP-1559) <code>block.chainid</code> uint current chain id <code>block.coinbase</code> address payable current block miner\u2019s address block.difficulty uint current block difficulty block.<code>gaslimit</code> uint current block <code>gaslimit</code>"},{"location":"Reference/rpc-payload.html","title":"RPC Payload","text":"field type description network_id string The network on which you want the simulate the transaction. One of: block_number number Block height. If left out the pending block will be used transaction_index number The index of the transaction inside the block. Note: This parameter must be omitted or 0 when the block_number property is left out from string The originating address for the simulated transaction to string The destination address for the simulated transaction input string ABI encoded input for the transaction gas number The gas limit for the transaction gas_price string The gas price for the transcation value string The ETH value sent in the transcation simulation_type string Either full or quick. full simulations use the contracts source code to generate a full trace, while the quick simulation will only use the contracts bytecode. If omitted, the default value is full. raw is available as well as the fastest one, which skips some steps save boolean Whether or not to save this simulation for later inspection save_if_fails boolean Save the simulation if the simulated transaction failed state_objects map[address]StateObject Use provided state objects to overwrite current state objects at address contracts []Contract Array of contract deployment info (exactly like contract upload requests). Will use the source field to overwrite the contracts source at a given address. block_header BlockHeader BlockHeader override. Used to change the timestamp or block number inside the EVM. Consists of timestamp and number both of which are optional. timestamp and number are hexadecimal values starting with 0x."},{"location":"Validators/accounting%2C.html","title":"Accounting and Rewards","text":"<p>This section addresses the financial aspects, particularly focusing on remunerations for validators and builders. It includes:</p> <ul> <li> <p>Notices and Proposals: Proposes different accounting regimes and details their advantages and   disadvantages.</p> </li> <li> <p>Validators and Builders Accounting: Discusses payment schemes and revenue distribution among   validators and builders.</p> </li> <li> <p>Bid Adjustment: Explains a new feature for adjusting bids in the auction system. The accounting   section is critical for understanding how financial transactions and distributions are managed   within the auction system.</p> </li> </ul>"},{"location":"Validators/accounting%2C.html#proposer-payments-value-ppv","title":"Proposer Payments Value (PPV)","text":"<p>The <code>feeReceipent</code> address is configured in the consensus layer client and is provided by the NO at the time of the block proposal. Because the eth1 address that is provided for the feeReceipent is under the complete control of the NO, there is an opportunity for a NO to steal all the PPV for themselves.</p>"},{"location":"Validators/overview.html","title":"Validators","text":""},{"location":"Validators/overview.html#validator-registration","title":"Validator Registration","text":""},{"location":"Validators/overview.html#validator-reporting","title":"Validator reporting","text":""},{"location":"Validators/relay.html","title":"Relay","text":"<p>proposer payout: empty block, 0; non empty block, non-negative value &lt; 0</p> <p>Once a proposer calls <code>submitBlindedBlock</code> to a relay (with a signed header), it depends on the relay to release the block to be able to propose anything (no fallback to a local block is possible at that point due to possible slashing).</p> <p>There's several relay error scenarios:</p> <ol> <li>payload withholding (relay doesn't release the payload and the proposer needs to forfeit the     slot)</li> <li>incorrect payload     a. incorrect value (the final amount paid by the builder to the proposer was different to the     amount claimed in the <code>BuilderBid</code>)     b. invalid block (invalid data / fields)</li> </ol>"}]}